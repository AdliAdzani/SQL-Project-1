Data Scientist Role Play: Profiling and Analyzing the Yelp Dataset Coursera Worksheet

This is a 2-part assignment. In the first part, you are asked a series of questions that will help you profile and understand the data just like a data scientist would. For this first part of the assignment, you will be assessed both on the correctness of your findings, as well as the code you used to arrive at your answer. You will be graded on how easy your code is to read, so remember to use proper formatting and comments where necessary.

In the second part of the assignment, you are asked to come up with your own inferences and analysis of the data for a particular research question you want to answer. You will be required to prepare the dataset for the analysis you choose to do. As with the first part, you will be graded, in part, on how easy your code is to read, so use proper formatting and comments to illustrate and communicate your intent as required.

For both parts of this assignment, use this "worksheet." It provides all the questions you are being asked, and your job will be to transfer your answers and SQL coding where indicated into this worksheet so that your peers can review your work. You should be able to use any Text Editor (Windows Notepad, Apple TextEdit, Notepad ++, Sublime Text, etc.) to copy and paste your answers. If you are going to use Word or some other page layout application, just be careful to make sure your answers and code are lined appropriately.
In this case, you may want to save as a PDF to ensure your formatting remains intact for you reviewer.



Part 1: Yelp Dataset Profiling and Understanding

1. Profile the data by finding the total number of records for each of the tables below:
	
i. Attribute table = 10000
ii. Business table = 10000
iii. Category table = 10000
iv. Checkin table = 10000
v. elite_years table = 10000
vi. friend table = 10000
vii. hours table = 10000
viii. photo table =  10000
ix. review table = 10000
x. tip table = 10000
xi. user table = 10000
	


2. Find the total distinct records by either the foreign key or primary key for each table. If two foreign keys are listed in the table, please specify which foreign key.

i. Business = id 10000
ii. Hours = business_id 1562
iii. Category = business_id 2643
iv. Attribute = business_id 1115
v. Review = (id 10000, business_id 8090, user_id 9581)
vi. Checkin = business_id 493
vii. Photo = (id 10000, business_id 6493)
viii. Tip = (user_id 537, business_id 3979)
ix. User = id 10000
x. Friend = user_id 11
xi. Elite_years = user_id 2780

Note: Primary Keys are denoted in the ER-Diagram with a yellow key icon.	



3. Are there any columns with null values in the Users table? Indicate "yes," or "no."

	Answer: No
	
	
	SQL code used to arrive at answer: 
	
	SELECT * FROM User
	WHERE (id IS NULL 
		OR name IS NULL
		OR review_count IS NULL
		OR yelping_since IS NULL
		OR useful IS NULL
		OR funny IS NULL
		OR cool IS NULL
		OR fans IS NULL
		OR average_stars IS NULL
		OR compliment_hot IS NULL
		OR compliment_more IS NULL
		OR compliment_profile IS NULL
		OR compliment_cute IS NULL
		OR compliment_list IS NULL
		OR compliment_note IS NULL
		OR compliment_plain IS NULL
		OR compliment_cool IS NULL
		OR compliment_funny IS NULL
		OR compliment_writer IS NULL
		OR compliment_photos IS NULL);
		
	

	
4. For each table and column listed below, display the smallest (minimum), largest (maximum), and average (mean) value for the following fields:

	i. Table: Review, Column: Stars
	
		min: 1		max: 5		avg: 3.7082
		
	
	ii. Table: Business, Column: Stars
	
		min: 1.0	max: 5.0	avg: 3.6549
		
	
	iii. Table: Tip, Column: Likes
	
		min: 0		max: 2		avg: 0.0144
		
	
	iv. Table: Checkin, Column: Count
	
		min: 1 		max: 53		avg: 1.9414
		
	
	v. Table: User, Column: Review_count
	
		min: 0		max: 2000	avg: 24.2995
		


5. List the cities with the most reviews in descending order:

	SQL code used to arrive at answer:

		SELECT City, SUM(review_count) AS Total_reviews
		FROM Business
		GROUP BY City
		ORDER BY Total_reviews DESC;
	
	Copy and Paste the Result Below:

		+-----------------+---------------+
		| city            | Total_reviews |
		+-----------------+---------------+
		| Las Vegas       |         82854 |
		| Phoenix         |         34503 |
		| Toronto         |         24113 |
		| Scottsdale      |         20614 |
		| Charlotte       |         12523 |
		| Henderson       |         10871 |
		| Tempe           |         10504 |
		| Pittsburgh      |          9798 |
		| Montréal        |          9448 |
		| Chandler        |          8112 |
		| Mesa            |          6875 |
		| Gilbert         |          6380 |
		| Cleveland       |          5593 |
		| Madison         |          5265 |
		| Glendale        |          4406 |
		| Mississauga     |          3814 |
		| Edinburgh       |          2792 |
		| Peoria          |          2624 |
		| North Las Vegas |          2438 |
		| Markham         |          2352 |
		| Champaign       |          2029 |
		| Stuttgart       |          1849 |
		| Surprise        |          1520 |
		| Lakewood        |          1465 |
		| Goodyear        |          1155 |
		+-----------------+---------------+
		(Output limit exceeded, 25 of 362 total rows shown)
	

	
6. Find the distribution of star ratings to the business in the following cities:

i. Avon

SQL code used to arrive at answer:

	SELECT Stars, SUM (review_count) 
	FROM Business
	WHERE City = 'Avon'
	GROUP BY Stars;

Copy and Paste the Resulting Table Below (2 columns â€“ star rating and count):

	+-------+--------------------+
	| stars | SUM (review_count) |
	+-------+--------------------+
	|   1.5 |                 10 |
	|   2.5 |                  6 |
	|   3.5 |                 88 |
	|   4.0 |                 21 |
	|   4.5 |                 31 |
	|   5.0 |                  3 |
	+-------+--------------------+

ii. Beachwood

SQL code used to arrive at answer:

	SELECT Stars, SUM (review_count) AS Star_ratings_count
	FROM Business
	WHERE City = 'Beachwood'
	GROUP BY Stars;

Copy and Paste the Resulting Table Below (2 columns â€“ star rating and count):

	+-------+--------------------+
	| stars | Star_ratings_count |
	+-------+--------------------+
	|   2.0 |                  8 |
	|   2.5 |                  3 |
	|   3.0 |                 11 |
	|   3.5 |                  6 |
	|   4.0 |                 69 |
	|   4.5 |                 17 |
	|   5.0 |                 23 |
	+-------+--------------------+


7. Find the top 3 users based on their total number of reviews:
		
	SQL code used to arrive at answer:
	
		SELECT Name, SUM(review_count) AS Total_reviews
		FROM User
		GROUP BY id
		ORDER BY Total_reviews DESC
		LIMIT 3;
			
		Copy and Paste the Result Below:

		+--------+---------------+
		| name   | Total_reviews |
		+--------+---------------+
		| Gerald |          2000 |
		| Sara   |          1629 |
		| Yuri   |          1339 |
		+--------+---------------+
		


8. Does posing more reviews correlate with more fans?

	Please explain your findings and interpretation of the results:

		Not necessary, becasue as seen in below table; William got less reviews compared to Sara, but William's fans were higher compared to Sara.

		(SQL Code)
		SELECT Name, SUM (review_count) AS Total_reviews, Fans
		FROM User
		GROUP BY id
		ORDER BY Total_reviews DESC;

		+-----------+---------------+------+
		| name      | Total_reviews | fans |
		+-----------+---------------+------+
		| Gerald    |          2000 |  253 |
		| Sara      |          1629 |   50 |
		| Yuri      |          1339 |   76 |
		| .Hon      |          1246 |  101 |
		| William   |          1215 |  126 |
		| Harald    |          1153 |  311 |
		| eric      |          1116 |   16 |
		| Roanna    |          1039 |  104 |
		| Mimi      |           968 |  497 |
		| Christine |           930 |  173 |
		| Ed        |           904 |   38 |
		| Nicole    |           864 |   43 |
		| Fran      |           862 |  124 |
		| Mark      |           861 |  115 |
		| Christina |           842 |   85 |
		| Dominic   |           836 |   37 |
		| Lissa     |           834 |  120 |
		| Lisa      |           813 |  159 |
		| Alison    |           775 |   61 |
		| Sui       |           754 |   78 |
		| Tim       |           702 |   35 |
		| L         |           696 |   10 |
		| Angela    |           694 |  101 |
		| Crissy    |           676 |   25 |
		| Lyn       |           675 |   45 |
		+-----------+---------------+------+
		(Output limit exceeded, 25 of 10000 total rows shown)
	

	
9. Are there more reviews with the word "love" or with the word "hate" in them?

	Answer:

		In conclusion, if referring to table below there are more reviews with word "Love" instead of word "Hate".
	
	SQL code used to arrive at answer:

		SELECT Feelings, COUNT(Feelings) AS Total_count
		FROM 
			(SELECT CASE
			WHEN Text LIKE '%love%' THEN 'Love'
			WHEN Text LIKE '%hate%' THEN 'Hate'
			ELSE 'Others'
			END AS Feelings
			FROM Review)
		GROUP BY Feelings
		ORDER BY Total_count DESC;

		+----------+-------------+
		| Feelings | Total_count |
		+----------+-------------+
		| Others   |        8042 |
		| Love     |        1780 |
		| Hate     |         178 |
		+----------+-------------+

	
	
10. Find the top 10 users with the most fans:

	SQL code used to arrive at answer:
	
		SELECT Name, SUM(Fans) AS Total_fans
		FROM User
		GROUP BY id
		ORDER BY Total_fans DESC
		LIMIT 10;
	
	Copy and Paste the Result Below:

		+-----------+------------+
		| name      | Total_fans |
		+-----------+------------+
		| Amy       |        503 |
		| Mimi      |        497 |
		| Harald    |        311 |
		| Gerald    |        253 |
		| Christine |        173 |
		| Lisa      |        159 |
		| Cat       |        133 |
		| William   |        126 |
		| Fran      |        124 |
		| Lissa     |        120 |
		+-----------+------------+

	
		

Part 2: Inferences and Analysis

1. Pick one city and category of your choice and group the businesses in that city or category by their overall star rating. Compare the businesses with 2-3 stars to the businesses with 4-5 stars and answer the following questions. Include your code.
	
	I choose Toronto as City & Restaurants as Category.

i. Do the two groups you chose to analyze have a different distribution of hours?

	Yes, both group have slightly different distribution of hours, about 3-4 hours differences.

	SELECT CASE
		WHEN b.Stars BETWEEN 4 AND 5 THEN '4-5 Stars'
		WHEN b.Stars BETWEEN 2 AND 3 THEN '2-3 Stars'
		ELSE 'Below 2 Stars'
		END AS Star_ratings,
		b.City, c.Category, COUNT(h.Hours) AS Distribution_Hours
	FROM Business b
	INNER JOIN Hours h ON b.id = h.business_id
	INNER JOIN Category c ON h.business_id = c.business_id
	WHERE b.City = 'Toronto' AND c.Category = 'Restaurants'
	GROUP BY Star_ratings;

	+--------------+---------+-------------+--------------------+
	| Star_ratings | city    | category    | Distribution_Hours |
	+--------------+---------+-------------+--------------------+
	| 2-3 Stars    | Toronto | Restaurants |                 21 |
	| 4-5 Stars    | Toronto | Restaurants |                 19 |
	+--------------+---------+-------------+--------------------+

ii. Do the two groups you chose to analyze have a different number of reviews?
         
		Yes, the gap between those 2 groups are quite big, around 120 reviews differences.

		SELECT CASE
			WHEN b.Stars BETWEEN 4 AND 5 THEN '4-5 Stars'
			WHEN b.Stars BETWEEN 2 AND 3 THEN '2-3 Stars'
			ELSE 'Below 2 Stars'
			END AS Star_ratings,
			b.City, c.Category, SUM(b.review_count) AS Total_review
		FROM Business b
		INNER JOIN Category c ON b.id = c.business_id
		WHERE b.City = 'Toronto' AND c.Category = 'Restaurants'
		GROUP BY Star_ratings;
         
		+---------------+---------+-------------+--------------+
		| Star_ratings  | city    | category    | Total_review |
		+---------------+---------+-------------+--------------+
		| 2-3 Stars     | Toronto | Restaurants |           86 |
		| 4-5 Stars     | Toronto | Restaurants |          206 |
		| Below 2 Stars | Toronto | Restaurants |            7 |
		+---------------+---------+-------------+--------------+

iii. Are you able to infer anything from the location data provided between these two groups? Explain.

SQL code used for analysis:

		Yes, for 2-3 Stars group mostly located in the same area, while for 4-5 Stars group not really located within the same area.

		SELECT CASE
			WHEN b.Stars BETWEEN 4 AND 5 THEN '4-5 Stars'
			WHEN b.Stars BETWEEN 2 AND 3 THEN '2-3 Stars'
			ELSE 'Below 2 Stars'
			END AS Star_ratings,
			b.City, c.Category, b.Address, b.neighborhood, b.postal_code
		FROM Business b
		INNER JOIN Category c ON b.id = c.business_id
		WHERE b.City = 'Toronto' AND c.Category = 'Restaurants'
		ORDER BY Star_ratings;

		+---------------+---------+-------------+--------------------------+------------------------+-------------+
		| Star_ratings  | city    | category    | address                  | neighborhood           | postal_code |
		+---------------+---------+-------------+--------------------------+------------------------+-------------+
		| 2-3 Stars     | Toronto | Restaurants | 260 Yonge Street         | Downtown Core          | M4B 2L9     |
		| 2-3 Stars     | Toronto | Restaurants | 389 Church Street        | Downtown Core          | M5B 2E5     |
		| 2-3 Stars     | Toronto | Restaurants | 270 Adelaide Street W    | Entertainment District | M5H 1X6     |
		| 4-5 Stars     | Toronto | Restaurants | 816 Saint Clair Avenue W |                        | M6C 1B6     |
		| 4-5 Stars     | Toronto | Restaurants | 1669 Bloor Street W      | High Park              | M6P 1A6     |
		| 4-5 Stars     | Toronto | Restaurants | 5084 Dundas Street W     | Etobicoke              | M9A 1C2     |
		| 4-5 Stars     | Toronto | Restaurants | 7 Byng Avenue            | Willowdale             | M2N 5R6     |
		| 4-5 Stars     | Toronto | Restaurants | 169 Niagara Street       | Niagara                | M5V         |
		| Below 2 Stars | Toronto | Restaurants | 5 Northtown Way, Unit 7  | Willowdale             | M2N 7A1     |
		| Below 2 Stars | Toronto | Restaurants | 3003 Bathurst Street     |                        | M6B         |
		+---------------+---------+-------------+--------------------------+------------------------+-------------+


		
		
2. Group business based on the ones that are open and the ones that are closed. What differences can you find between the ones that are still open and the ones that are closed? List at least two differences and the SQL code you used to arrive at your answer.
		
i. Difference 1:
		Based on the table below, Total reviews received between these 2 groups are significantly different from one another.
         
ii. Difference 2:
		Next, if compared with their Average stars received; both group showing less significant differences.
         
         
SQL code used for analysis:

	SELECT CASE 
		WHEN Is_open = 1 THEN 'Open'
		WHEN Is_open = 0 THEN 'Closed'
		END 'Store_status',
		COUNT(DISTINCT id) AS Total_stores, SUM(Review_count) AS Total_reviews, ROUND(AVG(Stars),2) AS Average_stars
	FROM Business
	GROUP BY Store_status;

	+--------------+--------------+---------------+---------------+
	| Store_status | Total_stores | Total_reviews | Average_stars |
	+--------------+--------------+---------------+---------------+
	| Closed       |         1520 |         35261 |          3.52 |
	| Open         |         8480 |        269300 |          3.68 |
	+--------------+--------------+---------------+---------------+

	
	
3. For this last part of your analysis, you are going to choose the type of analysis you want to conduct on the Yelp dataset and are going to prepare the data for analysis.

Ideas for analysis include: Parsing out keywords and business attributes for sentiment analysis, clustering businesses to find commonalities or anomalies between them, predicting the overall star rating for a business, predicting the number of fans a user will have, and so on. These are just a few examples to get you started, so feel free to be creative and come up with your own problem you want to solve. Provide answers, in-line, to all of the following:
	
i. Indicate the type of analysis you chose to do:

		The idea to analyse what are the similarities of most-successful business based on their category. 
         
ii. Write 1-2 brief paragraphs on the type of data you will need for your analysis and why you chose that data:

		To do this analysis, we will be joining 2 tables from business & category table. Then we used category, count the number of stores, reviews & stars data.
		We will group the category data, then count/sum up the total number of stores & reviews. Lastly find the average stars received by the businesses.
		Plus, we will limiting the data by only allowing those businesses have stars above 3.5 & number of store more than 10.   
                  
iii. Output of your finished dataset:
         
	+------------------------+--------------+---------------+---------------+
	| category               | Total_stores | Total_reviews | Average_stars |
	+------------------------+--------------+---------------+---------------+
	| Local Services         |           12 |           100 |          4.21 |
	| Active Life            |           10 |           131 |          4.15 |
	| Health & Medical       |           17 |           203 |          4.09 |
	| Home Services          |           16 |            94 |           4.0 |
	| Shopping               |           30 |           977 |          3.98 |
	| Beauty & Spas          |           13 |           119 |          3.88 |
	| American (Traditional) |           11 |          1128 |          3.82 |
	| Food                   |           23 |          1781 |          3.78 |
	| Bars                   |           17 |          1322 |           3.5 |
	+------------------------+--------------+---------------+---------------+

	From this table, we may concluded that businesses that achieved highest score of stars may not necessary have more reviews.
	This probably true because people may not always go to their places most of the time, but if they did went to these places, the service they received are worth it.
	That would be the primary reason why the average stars of these businesses are high. 
         
iv. Provide the SQL code you used to create your final dataset:

	SELECT c.Category, COUNT(DISTINCT b.id) AS Total_stores, 
		SUM(b.review_count) AS Total_reviews, 
		ROUND(AVG(b.stars),2) AS Average_stars
	FROM Business b
	INNER JOIN Category c ON b.id = c.business_id
	GROUP BY c.Category
	HAVING Total_stores >= 10 AND Average_stars >= 3.5
	ORDER BY Average_stars DESC
